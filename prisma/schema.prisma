datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  chats     Chat[]
}

model Chat {
  id        Int        @id @default(autoincrement())
  userId    Int
  title     String?
  status    ChatStatus @default(NONE)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User       @relation(fields: [userId], references: [id])
  documents Document[]
  messages  Message[]
}

enum ChatStatus {
  STARRED
  SAVED
  NONE
}

model Document {
  id         Int      @id @default(autoincrement())
  chatId     Int
  name       String
  filePath   String
  size       Int?     // Added to store file size
  type       String?  // Added to store MIME type
  uploadedAt DateTime @default(now())
  chat       Chat     @relation(fields: [chatId], references: [id])
}

model Message {
  id        Int      @id @default(autoincrement())
  chatId    Int
  sender    Sender
  content   String
  type      MessageType @default(REGULAR) // Added to distinguish query/response
  createdAt DateTime    @default(now())
  chat      Chat        @relation(fields: [chatId], references: [id])
}

enum Sender {
  USER
  ASSISTANT
}

enum MessageType {
  REGULAR
  QUERY
  RESPONSE
}