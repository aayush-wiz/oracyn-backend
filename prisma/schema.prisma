// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  username  String
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  chats     Chat[]
  documents Document[]
  charts    Chart[]
}

model Chat {
  id        String     @id @default(uuid())
  title     String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  userId    String
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages  Message[]
  documents Document[]
  charts    Chart[]
}

model Message {
  id         String   @id @default(uuid())
  sender     String // "user" or "assistant"
  text       String
  timestamp  DateTime @default(now())
  chatId     String
  chat       Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  tokensUsed Int?     @default(0)
}

model Document {
  id         String   @id @default(uuid())
  fileName   String
  filePath   String
  fileType   String
  fileSize   Float
  uploadedAt DateTime @default(now())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  chatId     String
  chat       Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
}

model Chart {
  id          String   @id @default(uuid())
  type        String
  label       String
  data        String
  config      String
  createdFrom String
  createdAt   DateTime @default(now())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  chatId      String
  chat        Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  tokensUsed  Int?     @default(0)
}
